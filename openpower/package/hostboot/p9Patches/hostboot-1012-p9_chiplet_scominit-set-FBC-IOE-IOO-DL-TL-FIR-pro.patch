From 394c2a3696e7a1c47a1c4e34bd9c9b8644aefcf4 Mon Sep 17 00:00:00 2001
From: Joe McGill <jmcgill@us.ibm.com>
Date: Tue, 25 Oct 2016 08:09:06 -0500
Subject: [PATCH v1 1012/1022] p9_chiplet_scominit -- set FBC IOE/IOO DL TL FIR
 programming, mask HCA FIRs

Change-Id: I499c367e38132c76e40ace223505dbcfb31d1286
---
 .../procedures/hwp/initfiles/p9_fbc_ioe_dl_scom.C  |  9 +--
 .../procedures/hwp/initfiles/p9_fbc_ioe_tl_scom.C  | 21 ++---
 .../procedures/hwp/initfiles/p9_fbc_ioo_dl_scom.C  | 13 +--
 .../p9/procedures/hwp/nest/p9_chiplet_scominit.C   | 92 +++++++++++++++++++++-
 4 files changed, 97 insertions(+), 38 deletions(-)

diff --git a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_dl_scom.C b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_dl_scom.C
index ae69025..dafc824 100644
--- a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_dl_scom.C
+++ b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_dl_scom.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2016                             */
+/* Contributors Listed Below - COPYRIGHT 2016,2017                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -29,7 +29,6 @@
 
 using namespace fapi2;
 
-constexpr uint64_t literal_0xFFFFFFFFFFFFFFFF = 0xFFFFFFFFFFFFFFFF;
 constexpr uint64_t literal_0xE00 = 0xE00;
 constexpr uint64_t literal_0x0000 = 0x0000;
 constexpr uint64_t literal_0x0 = 0x0;
@@ -40,12 +39,6 @@ fapi2::ReturnCode p9_fbc_ioe_dl_scom(const fapi2::Target<fapi2::TARGET_TYPE_XBUS
     {
         fapi2::buffer<uint64_t> l_scom_buffer;
         {
-            FAPI_TRY(fapi2::getScom( TGT0, 0x6011803ull, l_scom_buffer ));
-
-            l_scom_buffer.insert<0, 64, 0, uint64_t>(literal_0xFFFFFFFFFFFFFFFF );
-            FAPI_TRY(fapi2::putScom(TGT0, 0x6011803ull, l_scom_buffer));
-        }
-        {
             FAPI_TRY(fapi2::getScom( TGT0, 0x601180aull, l_scom_buffer ));
 
             constexpr auto l_PB_IOE_LL1_CONFIG_LINK_PAIR_ON = 0x1;
diff --git a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_tl_scom.C b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_tl_scom.C
index 69666f1..c5f89c9 100644
--- a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_tl_scom.C
+++ b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioe_tl_scom.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2016                             */
+/* Contributors Listed Below - COPYRIGHT 2016,2017                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -30,11 +30,9 @@
 using namespace fapi2;
 
 constexpr uint64_t literal_0 = 0;
-constexpr uint64_t literal_2 = 2;
-constexpr uint64_t literal_1 = 1;
-constexpr uint64_t literal_0xFFFFFFFFFFFFFFFF = 0xFFFFFFFFFFFFFFFF;
 constexpr uint64_t literal_0x1 = 0x1;
 constexpr uint64_t literal_0x20 = 0x20;
+constexpr uint64_t literal_1 = 1;
 constexpr uint64_t literal_12 = 12;
 constexpr uint64_t literal_8 = 8;
 constexpr uint64_t literal_10 = 10;
@@ -46,6 +44,7 @@ constexpr uint64_t literal_0b0001110 = 0b0001110;
 constexpr uint64_t literal_0b0001101 = 0b0001101;
 constexpr uint64_t literal_13 = 13;
 constexpr uint64_t literal_0b0001100 = 0b0001100;
+constexpr uint64_t literal_2 = 2;
 constexpr uint64_t literal_0x1F = 0x1F;
 constexpr uint64_t literal_0x3E = 0x3E;
 constexpr uint64_t literal_0x3C = 0x3C;
@@ -62,8 +61,6 @@ fapi2::ReturnCode p9_fbc_ioe_tl_scom(const fapi2::Target<fapi2::TARGET_TYPE_PROC
         fapi2::ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG_Type l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG;
         FAPI_TRY(FAPI_ATTR_GET(fapi2::ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG, TGT0,
                                l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG));
-        uint64_t l_def_X2_ENABLED = (l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG[literal_2] != literal_0);
-        uint64_t l_def_X1_ENABLED = (l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG[literal_1] != literal_0);
         uint64_t l_def_X0_ENABLED = (l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG[literal_0] != literal_0);
         fapi2::ATTR_FREQ_PB_MHZ_Type l_TGT1_ATTR_FREQ_PB_MHZ;
         FAPI_TRY(FAPI_ATTR_GET(fapi2::ATTR_FREQ_PB_MHZ, TGT1, l_TGT1_ATTR_FREQ_PB_MHZ));
@@ -81,18 +78,10 @@ fapi2::ReturnCode p9_fbc_ioe_tl_scom(const fapi2::Target<fapi2::TARGET_TYPE_PROC
                                         (literal_10 * l_TGT1_ATTR_FREQ_PB_MHZ));
         uint64_t l_def_X_RATIO_10_13 = ((literal_13 * (l_TGT1_ATTR_FREQ_X_MHZ * literal_8)) >=
                                         (literal_10 * l_TGT1_ATTR_FREQ_PB_MHZ));
+        uint64_t l_def_X1_ENABLED = (l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG[literal_1] != literal_0);
+        uint64_t l_def_X2_ENABLED = (l_TGT0_ATTR_PROC_FABRIC_X_ATTACHED_CHIP_CNFG[literal_2] != literal_0);
         fapi2::buffer<uint64_t> l_scom_buffer;
         {
-            FAPI_TRY(fapi2::getScom( TGT0, 0x5013403ull, l_scom_buffer ));
-
-            if (((l_def_X0_ENABLED || l_def_X1_ENABLED) || l_def_X2_ENABLED))
-            {
-                l_scom_buffer.insert<0, 64, 0, uint64_t>(literal_0xFFFFFFFFFFFFFFFF );
-            }
-
-            FAPI_TRY(fapi2::putScom(TGT0, 0x5013403ull, l_scom_buffer));
-        }
-        {
             FAPI_TRY(fapi2::getScom( TGT0, 0x501340aull, l_scom_buffer ));
 
             if (l_def_X0_ENABLED)
diff --git a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioo_dl_scom.C b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioo_dl_scom.C
index 0b94dd9..c07c538 100644
--- a/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioo_dl_scom.C
+++ b/src/import/chips/p9/procedures/hwp/initfiles/p9_fbc_ioo_dl_scom.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2016                             */
+/* Contributors Listed Below - COPYRIGHT 2016,2017                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -29,7 +29,6 @@
 
 using namespace fapi2;
 
-constexpr uint64_t literal_0xFFFFFFFFFFFFFFFF = 0xFFFFFFFFFFFFFFFF;
 
 fapi2::ReturnCode p9_fbc_ioo_dl_scom(const fapi2::Target<fapi2::TARGET_TYPE_OBUS>& TGT0)
 {
@@ -39,16 +38,6 @@ fapi2::ReturnCode p9_fbc_ioo_dl_scom(const fapi2::Target<fapi2::TARGET_TYPE_OBUS
         uint64_t l_def_OBUS_FBC_ENABLED = (l_TGT0_ATTR_OPTICS_CONFIG_MODE == ENUM_ATTR_OPTICS_CONFIG_MODE_SMP);
         fapi2::buffer<uint64_t> l_scom_buffer;
         {
-            FAPI_TRY(fapi2::getScom( TGT0, 0x9010803ull, l_scom_buffer ));
-
-            if (l_def_OBUS_FBC_ENABLED)
-            {
-                l_scom_buffer.insert<0, 64, 0, uint64_t>(literal_0xFFFFFFFFFFFFFFFF );
-            }
-
-            FAPI_TRY(fapi2::putScom(TGT0, 0x9010803ull, l_scom_buffer));
-        }
-        {
             FAPI_TRY(fapi2::getScom( TGT0, 0x901080aull, l_scom_buffer ));
 
             if (l_def_OBUS_FBC_ENABLED)
diff --git a/src/import/chips/p9/procedures/hwp/nest/p9_chiplet_scominit.C b/src/import/chips/p9/procedures/hwp/nest/p9_chiplet_scominit.C
index b316823..6fbe412 100644
--- a/src/import/chips/p9/procedures/hwp/nest/p9_chiplet_scominit.C
+++ b/src/import/chips/p9/procedures/hwp/nest/p9_chiplet_scominit.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2015,2016                        */
+/* Contributors Listed Below - COPYRIGHT 2015,2017                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -51,6 +51,40 @@
 #include <p9_int_scom.H>
 #include <p9_vas_scom.H>
 
+#include <p9_xbus_scom_addresses.H>
+#include <p9_xbus_scom_addresses_fld.H>
+#include <p9_obus_scom_addresses.H>
+#include <p9_obus_scom_addresses_fld.H>
+#include <p9_misc_scom_addresses.H>
+
+//------------------------------------------------------------------------------
+// Constant definitions
+//------------------------------------------------------------------------------
+const uint64_t FBC_IOE_TL_FIR_ACTION0 = 0x0000000000000000ULL;
+const uint64_t FBC_IOE_TL_FIR_ACTION1 = 0x004B000000000000ULL;
+const uint64_t FBC_IOE_TL_FIR_MASK    = 0xFF24F0303FFFFFFFULL;
+
+const uint64_t FBC_IOO_TL_FIR_ACTION0 = 0x0000000000000000ULL;
+const uint64_t FBC_IOO_TL_FIR_ACTION1 = 0x0002400000000000ULL;
+const uint64_t FBC_IOO_TL_FIR_MASK    = 0xFF6DB0000FFFFFFFULL;
+
+const uint64_t FBC_IOE_DL_FIR_ACTION0 = 0x0000000000000000ULL;
+const uint64_t FBC_IOE_DL_FIR_ACTION1 = 0x0303C00000001FFCULL;
+const uint64_t FBC_IOE_DL_FIR_MASK    = 0xFCFC3FFFFFFFE003ULL;
+
+const uint64_t FBC_IOO_DL_FIR_ACTION0 = 0x0000000000000000ULL;
+const uint64_t FBC_IOO_DL_FIR_ACTION1 = 0x0303C0000300FFFCULL;
+const uint64_t FBC_IOO_DL_FIR_MASK    = 0xFCFC3FFFFCFF0003ULL;
+
+const uint64_t HCA_EH_FIR_ACTION0     = 0x0000000000000000ULL;
+const uint64_t HCA_EH_FIR_ACTION1     = 0x0000000000000000ULL;
+const uint64_t HCA_EH_FIR_MASK        = 0xFFFFFFFFF0000000ULL;
+
+const uint64_t HCA_EN_FIR_ACTION0     = 0x0000000000000000ULL;
+const uint64_t HCA_EN_FIR_ACTION1     = 0x0000000000000000ULL;
+const uint64_t HCA_EN_FIR_MASK        = 0xFFFFFF0000000000ULL;
+
+
 //------------------------------------------------------------------------------
 // Function definitions
 //------------------------------------------------------------------------------
@@ -100,7 +134,7 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
         goto fapi_try_exit;
     }
 
-    // invoke IOE (XBUS FBC IO) SCOM initfiles
+    // setup IOE (XBUS FBC IO) TL SCOMs
     FAPI_DBG("Invoking p9.fbc.ioe_tl.scom.initfile on target %s...", l_procTargetStr);
     FAPI_EXEC_HWP(l_rc, p9_fbc_ioe_tl_scom, i_target, FAPI_SYSTEM);
 
@@ -113,6 +147,17 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
 
     l_xbus_chiplets = i_target.getChildren<fapi2::TARGET_TYPE_XBUS>();
 
+    if (l_xbus_chiplets.size())
+    {
+        FAPI_TRY(fapi2::putScom(i_target, PU_PB_IOE_FIR_ACTION0_REG, FBC_IOE_TL_FIR_ACTION0),
+                 "Error from putScom (PU_PB_IOE_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_PB_IOE_FIR_ACTION1_REG, FBC_IOE_TL_FIR_ACTION1),
+                 "Error from putScom (PU_PB_IOE_FIR_ACTION1_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_PB_IOE_FIR_MASK_REG, FBC_IOE_TL_FIR_MASK),
+                 "Error from putScom (PU_PB_IOE_FIR_MASK_REG)");
+    }
+
+    // setup IOE (XBUS FBC IO) DL SCOMs
     for (auto l_iter = l_xbus_chiplets.begin();
          l_iter != l_xbus_chiplets.end();
          l_iter++)
@@ -127,6 +172,14 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
             fapi2::current_err = l_rc;
             goto fapi_try_exit;
         }
+
+        // configure action registers & unmask
+        FAPI_TRY(fapi2::putScom(*l_iter, XBUS_LL0_IOEL_FIR_ACTION0_REG, FBC_IOE_DL_FIR_ACTION0),
+                 "Error from putScom (XBUS_LL0_IOEL_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(*l_iter, XBUS_LL0_IOEL_FIR_ACTION1_REG, FBC_IOE_DL_FIR_ACTION1),
+                 "Error from putScom (XBUS_LL0_IOEL_FIR_ACTION1_REG)");
+        FAPI_TRY(fapi2::putScom(*l_iter, XBUS_LL0_LL0_LL0_IOEL_FIR_MASK_REG, FBC_IOE_DL_FIR_MASK),
+                 "Error from putScom (XBUS_LL0_LL0_LL0_IOEL_FIR_MASK_REG)");
     }
 
     // invoke IOO (OBUS FBC IO) SCOM initfiles
@@ -142,6 +195,16 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
 
     l_obus_chiplets = i_target.getChildren<fapi2::TARGET_TYPE_OBUS>();
 
+    if (l_obus_chiplets.size())
+    {
+        FAPI_TRY(fapi2::putScom(i_target, PU_IOE_PB_IOO_FIR_ACTION0_REG, FBC_IOO_TL_FIR_ACTION0),
+                 "Error from putScom (PU_IOE_PB_IOO_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_IOE_PB_IOO_FIR_ACTION1_REG, FBC_IOO_TL_FIR_ACTION1),
+                 "Error from putScom (PU_IOE_PB_IOO_FIR_ACTION1_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_IOE_PB_IOO_FIR_MASK_REG, FBC_IOO_TL_FIR_MASK),
+                 "Error from putScom (PU_IOE_PB_IOO_FIR_MASK_REG)");
+    }
+
     for (auto l_iter = l_obus_chiplets.begin();
          l_iter != l_obus_chiplets.end();
          l_iter++)
@@ -162,6 +225,14 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
             fapi2::current_err = l_rc;
             goto fapi_try_exit;
         }
+
+        // configure action registers & unmask
+        FAPI_TRY(fapi2::putScom(*l_iter, OBUS_LL0_PB_IOOL_FIR_ACTION0_REG, FBC_IOO_DL_FIR_ACTION0),
+                 "Error from putScom (OBUS_LL0_PB_IOOL_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(*l_iter, OBUS_LL0_PB_IOOL_FIR_ACTION1_REG, FBC_IOO_DL_FIR_ACTION1),
+                 "Error from putScom (OBUS_LL0_PB_IOOL_FIR_ACTION1_REG)");
+        FAPI_TRY(fapi2::putScom(*l_iter, OBUS_LL0_LL0_LL0_PB_IOOL_FIR_MASK_REG, FBC_IOO_DL_FIR_MASK),
+                 "Error from putScom (OBUS_LL0_LL0_LL0_PB_IOOL_FIR_MASK_REG)");
     }
 
     FAPI_TRY(FAPI_ATTR_SET(fapi2::ATTR_PROC_FABRIC_OPTICS_CONFIG_MODE, i_target, l_fbc_optics_cfg_mode),
@@ -218,6 +289,23 @@ fapi2::ReturnCode p9_chiplet_scominit(const fapi2::Target<fapi2::TARGET_TYPE_PRO
         goto fapi_try_exit;
     }
 
+    // HCA setup
+    {
+        FAPI_TRY(fapi2::putScom(i_target, PU_EHHCA_FIR_ACTION0_REG, HCA_EH_FIR_ACTION0),
+                 "Error from putScom (PU_EHHCA_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_EHHCA_FIR_ACTION1_REG, HCA_EH_FIR_ACTION1),
+                 "Error from putScom (PU_EHHCA_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_EHHCA_FIR_MASK_REG, HCA_EH_FIR_MASK),
+                 "Error from putScom (PU_EHHCA_FIR_MASK_REG)");
+
+        FAPI_TRY(fapi2::putScom(i_target, PU_ENHCA_FIR_ACTION0_REG, HCA_EN_FIR_ACTION0),
+                 "Error from putScom (PU_ENHCA_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_ENHCA_FIR_ACTION1_REG, HCA_EN_FIR_ACTION1),
+                 "Error from putScom (PU_ENHCA_FIR_ACTION0_REG)");
+        FAPI_TRY(fapi2::putScom(i_target, PU_ENHCA_FIR_MASK_REG, HCA_EN_FIR_MASK),
+                 "Error from putScom (PU_ENHCA_FIR_MASK_REG)");
+    }
+
 fapi_try_exit:
     FAPI_DBG("End");
     return fapi2::current_err;
-- 
1.8.2.2

